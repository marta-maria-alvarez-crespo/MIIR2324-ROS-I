#!/usr/bin/env python

# Autora: Marta María Álvarez Crespo
# Descripción: Nodo de ROS que inicia el proceso FollowWall.
# Última modificación: 07 / 04 / 2024

import rospy
from myturtle3.msg import StateMessage
from myturtle3 import follow_wall

VARIABLE = False


def subscriber_callback(data):
    """
    Callback para el subscriptor.

    Esta función se llama cada vez que se recibe un nuevo mensaje del sensor.
    Guarda el mensaje recibido y actualiza la VARIABLE global en función del mensaje.

    Args:
        data: El mensaje del sensor recibido.

    Returns:
        None
    """
    rospy.loginfo(f"New sensor message received: {data.id}, {data.state}.")
    if data.id == "follow_wall":
        global VARIABLE
        VARIABLE = data.state


def inicia_nodo():
    """
    Inicializa el nodo de ROS y comienza el comportamiento de seguir la pared.

    Esta función inicializa el nodo de ROS, se suscribe al topic "state",
    e inicia el objeto follow_wall.FollowWall(). Entra en un bucle donde espera a que la VARIABLE global sea True.
    Una vez que VARIABLE es True, establece VARIABLE en False e inicia el comportamiento de seguir la pared.

    Raises:
        rospy.ROSInterruptException: Si hay un error inicializando el nodo.

    """
    try:
        rospy.init_node("follow_node")
        follow = follow_wall.FollowWall()
        rospy.Subscriber("state", StateMessage, subscriber_callback)

        global VARIABLE
        while True:
            while not VARIABLE:
                None

            VARIABLE = False
            follow.start()

    except rospy.ROSInterruptException:
        rospy.logerr("Error inicializando el nodo")


if __name__ == "__main__":
    inicia_nodo()
