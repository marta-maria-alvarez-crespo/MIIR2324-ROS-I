#!/usr/bin/env python

import rospy
from myturtle3.msg import StateMessage
from myturtle3 import follow_wall

VARIABLE = False


def subscriber_callback(data):
    """
    Callback function for the subscriber.

    This function is called whenever a new sensor message is received.
    It logs the received message and updates the global VARIABLE based on the message.

    Args:
        data: The sensor message received.

    Returns:
        None
    """
    rospy.loginfo(f"New sensor message received: {data.id}, {data.state}.")
    if data.id == "follow_wall":
        global VARIABLE
        VARIABLE = data.state


def inicia_nodo():
    """
    Initializes the follow_node and starts the follow wall behavior.

    This function initializes the ROS node, subscribes to the "state" topic,
    and starts the follow wall behavior when the global VARIABLE is True.

    Raises:
        rospy.ROSInterruptException: If there is an error initializing the node.

    """
    try:
        rospy.init_node("follow_node")
        follow = follow_wall.FollowWall()
        rospy.Subscriber("state", StateMessage, subscriber_callback)

        global VARIABLE
        while True:
            while not VARIABLE:
                None

            VARIABLE = False
            follow.start()

    except rospy.ROSInterruptException:
        rospy.logerr("Error inicializando el nodo")


if __name__ == "__main__":
    inicia_nodo()
